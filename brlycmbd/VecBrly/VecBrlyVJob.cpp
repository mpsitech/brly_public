/**
  * \file VecBrlyVJob.cpp
  * vector VecBrlyVJob (implementation)
  * \author Alexander Wirthmueller
  * \date created: 8 Jan 2018
  * \date modified: 8 Jan 2018
  */

#include "VecBrlyVJob.h"

/******************************************************************************
 namespace VecBrlyVJob
 ******************************************************************************/

uint VecBrlyVJob::getIx(
			const string& sref
		) {
	string s = StrMod::lc(sref);

	if (s == "crdbrlycon") return CRDBRLYCON;
	else if (s == "crdbrlyfil") return CRDBRLYFIL;
	else if (s == "crdbrlyflt") return CRDBRLYFLT;
	else if (s == "crdbrlyleg") return CRDBRLYLEG;
	else if (s == "crdbrlyloc") return CRDBRLYLOC;
	else if (s == "crdbrlynav") return CRDBRLYNAV;
	else if (s == "crdbrlyopr") return CRDBRLYOPR;
	else if (s == "crdbrlyprs") return CRDBRLYPRS;
	else if (s == "crdbrlypty") return CRDBRLYPTY;
	else if (s == "crdbrlyreg") return CRDBRLYREG;
	else if (s == "crdbrlyrly") return CRDBRLYRLY;
	else if (s == "crdbrlyseg") return CRDBRLYSEG;
	else if (s == "crdbrlyttb") return CRDBRLYTTB;
	else if (s == "crdbrlyusg") return CRDBRLYUSG;
	else if (s == "crdbrlyusr") return CRDBRLYUSR;
	else if (s == "dlgbrlyconnew") return DLGBRLYCONNEW;
	else if (s == "dlgbrlylegnew") return DLGBRLYLEGNEW;
	else if (s == "dlgbrlynavloaini") return DLGBRLYNAVLOAINI;
	else if (s == "dlgbrlyttbimpflt") return DLGBRLYTTBIMPFLT;
	else if (s == "dlgbrlyttbnew") return DLGBRLYTTBNEW;
	else if (s == "dlgbrlyttbtrlorig") return DLGBRLYTTBTRLORIG;
	else if (s == "iexbrlyflt") return IEXBRLYFLT;
	else if (s == "iexbrlyini") return IEXBRLYINI;
	else if (s == "iexbrlyttb") return IEXBRLYTTB;
	else if (s == "pnlbrlycon1nrelay") return PNLBRLYCON1NRELAY;
	else if (s == "pnlbrlyconconmnequipment") return PNLBRLYCONCONMNEQUIPMENT;
	else if (s == "pnlbrlycondetail") return PNLBRLYCONDETAIL;
	else if (s == "pnlbrlyconheadbar") return PNLBRLYCONHEADBAR;
	else if (s == "pnlbrlyconlist") return PNLBRLYCONLIST;
	else if (s == "pnlbrlyconmap") return PNLBRLYCONMAP;
	else if (s == "pnlbrlyconmnflight") return PNLBRLYCONMNFLIGHT;
	else if (s == "pnlbrlyconmnsegment") return PNLBRLYCONMNSEGMENT;
	else if (s == "pnlbrlyconpre") return PNLBRLYCONPRE;
	else if (s == "pnlbrlyconrec") return PNLBRLYCONREC;
	else if (s == "pnlbrlyconref1nsegment") return PNLBRLYCONREF1NSEGMENT;
	else if (s == "pnlbrlyfildetail") return PNLBRLYFILDETAIL;
	else if (s == "pnlbrlyfilheadbar") return PNLBRLYFILHEADBAR;
	else if (s == "pnlbrlyfillist") return PNLBRLYFILLIST;
	else if (s == "pnlbrlyfilrec") return PNLBRLYFILREC;
	else if (s == "pnlbrlyflt1nconnection") return PNLBRLYFLT1NCONNECTION;
	else if (s == "pnlbrlyfltdetail") return PNLBRLYFLTDETAIL;
	else if (s == "pnlbrlyflteqp1nnode") return PNLBRLYFLTEQP1NNODE;
	else if (s == "pnlbrlyflteqpmnconnection") return PNLBRLYFLTEQPMNCONNECTION;
	else if (s == "pnlbrlyfltfafawaypoint") return PNLBRLYFLTFAFAWAYPOINT;
	else if (s == "pnlbrlyfltheadbar") return PNLBRLYFLTHEADBAR;
	else if (s == "pnlbrlyfltlist") return PNLBRLYFLTLIST;
	else if (s == "pnlbrlyfltmnconnection") return PNLBRLYFLTMNCONNECTION;
	else if (s == "pnlbrlyfltmnlocation") return PNLBRLYFLTMNLOCATION;
	else if (s == "pnlbrlyfltorgmnflight") return PNLBRLYFLTORGMNFLIGHT;
	else if (s == "pnlbrlyfltpre") return PNLBRLYFLTPRE;
	else if (s == "pnlbrlyfltrec") return PNLBRLYFLTREC;
	else if (s == "pnlbrlyfltref1nsegment") return PNLBRLYFLTREF1NSEGMENT;
	else if (s == "pnlbrlyleg1nflight") return PNLBRLYLEG1NFLIGHT;
	else if (s == "pnlbrlylegcor1nconnection") return PNLBRLYLEGCOR1NCONNECTION;
	else if (s == "pnlbrlylegdetail") return PNLBRLYLEGDETAIL;
	else if (s == "pnlbrlylegheadbar") return PNLBRLYLEGHEADBAR;
	else if (s == "pnlbrlyleglist") return PNLBRLYLEGLIST;
	else if (s == "pnlbrlylegmap") return PNLBRLYLEGMAP;
	else if (s == "pnlbrlylegmnlocation") return PNLBRLYLEGMNLOCATION;
	else if (s == "pnlbrlylegorgmnleg") return PNLBRLYLEGORGMNLEG;
	else if (s == "pnlbrlylegpre") return PNLBRLYLEGPRE;
	else if (s == "pnlbrlylegrec") return PNLBRLYLEGREC;
	else if (s == "pnlbrlylocbgn1nleg") return PNLBRLYLOCBGN1NLEG;
	else if (s == "pnlbrlylocdetail") return PNLBRLYLOCDETAIL;
	else if (s == "pnlbrlylocend1nleg") return PNLBRLYLOCEND1NLEG;
	else if (s == "pnlbrlyloceqp1nnode") return PNLBRLYLOCEQP1NNODE;
	else if (s == "pnlbrlyloceqpmnconnection") return PNLBRLYLOCEQPMNCONNECTION;
	else if (s == "pnlbrlylocheadbar") return PNLBRLYLOCHEADBAR;
	else if (s == "pnlbrlyloclist") return PNLBRLYLOCLIST;
	else if (s == "pnlbrlylocmap") return PNLBRLYLOCMAP;
	else if (s == "pnlbrlylocmnflight") return PNLBRLYLOCMNFLIGHT;
	else if (s == "pnlbrlylocmnleg") return PNLBRLYLOCMNLEG;
	else if (s == "pnlbrlylocmnsegment") return PNLBRLYLOCMNSEGMENT;
	else if (s == "pnlbrlylocproxorgmnlocation") return PNLBRLYLOCPROXORGMNLOCATION;
	else if (s == "pnlbrlylocrec") return PNLBRLYLOCREC;
	else if (s == "pnlbrlylocvisorgmnlocation") return PNLBRLYLOCVISORGMNLOCATION;
	else if (s == "pnlbrlynavadmin") return PNLBRLYNAVADMIN;
	else if (s == "pnlbrlynavbase") return PNLBRLYNAVBASE;
	else if (s == "pnlbrlynavconnect") return PNLBRLYNAVCONNECT;
	else if (s == "pnlbrlynavheadbar") return PNLBRLYNAVHEADBAR;
	else if (s == "pnlbrlyopr1nequipment") return PNLBRLYOPR1NEQUIPMENT;
	else if (s == "pnlbrlyoprdetail") return PNLBRLYOPRDETAIL;
	else if (s == "pnlbrlyoprheadbar") return PNLBRLYOPRHEADBAR;
	else if (s == "pnlbrlyoprlist") return PNLBRLYOPRLIST;
	else if (s == "pnlbrlyoprrec") return PNLBRLYOPRREC;
	else if (s == "pnlbrlyprsadetail") return PNLBRLYPRSADETAIL;
	else if (s == "pnlbrlyprsdetail") return PNLBRLYPRSDETAIL;
	else if (s == "pnlbrlyprsheadbar") return PNLBRLYPRSHEADBAR;
	else if (s == "pnlbrlyprslist") return PNLBRLYPRSLIST;
	else if (s == "pnlbrlyprsrec") return PNLBRLYPRSREC;
	else if (s == "pnlbrlypty1nequipment") return PNLBRLYPTY1NEQUIPMENT;
	else if (s == "pnlbrlyptydetail") return PNLBRLYPTYDETAIL;
	else if (s == "pnlbrlyptyheadbar") return PNLBRLYPTYHEADBAR;
	else if (s == "pnlbrlyptylist") return PNLBRLYPTYLIST;
	else if (s == "pnlbrlyptyrec") return PNLBRLYPTYREC;
	else if (s == "pnlbrlyreg1nlocation") return PNLBRLYREG1NLOCATION;
	else if (s == "pnlbrlyregadstswitch") return PNLBRLYREGADSTSWITCH;
	else if (s == "pnlbrlyregdetail") return PNLBRLYREGDETAIL;
	else if (s == "pnlbrlyregheadbar") return PNLBRLYREGHEADBAR;
	else if (s == "pnlbrlyreglist") return PNLBRLYREGLIST;
	else if (s == "pnlbrlyregrec") return PNLBRLYREGREC;
	else if (s == "pnlbrlyregsup1nregion") return PNLBRLYREGSUP1NREGION;
	else if (s == "pnlbrlyrly1nnode") return PNLBRLYRLY1NNODE;
	else if (s == "pnlbrlyrlydetail") return PNLBRLYRLYDETAIL;
	else if (s == "pnlbrlyrlyheadbar") return PNLBRLYRLYHEADBAR;
	else if (s == "pnlbrlyrlylist") return PNLBRLYRLYLIST;
	else if (s == "pnlbrlyrlyrec") return PNLBRLYRLYREC;
	else if (s == "pnlbrlysegdetail") return PNLBRLYSEGDETAIL;
	else if (s == "pnlbrlysegheadbar") return PNLBRLYSEGHEADBAR;
	else if (s == "pnlbrlyseglist") return PNLBRLYSEGLIST;
	else if (s == "pnlbrlysegmnconnection") return PNLBRLYSEGMNCONNECTION;
	else if (s == "pnlbrlysegmnlocation") return PNLBRLYSEGMNLOCATION;
	else if (s == "pnlbrlysegorgmnsegment") return PNLBRLYSEGORGMNSEGMENT;
	else if (s == "pnlbrlysegpre") return PNLBRLYSEGPRE;
	else if (s == "pnlbrlysegrec") return PNLBRLYSEGREC;
	else if (s == "pnlbrlyttb1nflight") return PNLBRLYTTB1NFLIGHT;
	else if (s == "pnlbrlyttbdetail") return PNLBRLYTTBDETAIL;
	else if (s == "pnlbrlyttbheadbar") return PNLBRLYTTBHEADBAR;
	else if (s == "pnlbrlyttblist") return PNLBRLYTTBLIST;
	else if (s == "pnlbrlyttbrec") return PNLBRLYTTBREC;
	else if (s == "pnlbrlyttbref1nfile") return PNLBRLYTTBREF1NFILE;
	else if (s == "pnlbrlyusgaaccess") return PNLBRLYUSGAACCESS;
	else if (s == "pnlbrlyusgdetail") return PNLBRLYUSGDETAIL;
	else if (s == "pnlbrlyusgheadbar") return PNLBRLYUSGHEADBAR;
	else if (s == "pnlbrlyusglist") return PNLBRLYUSGLIST;
	else if (s == "pnlbrlyusgmnuser") return PNLBRLYUSGMNUSER;
	else if (s == "pnlbrlyusgrec") return PNLBRLYUSGREC;
	else if (s == "pnlbrlyusr1nsession") return PNLBRLYUSR1NSESSION;
	else if (s == "pnlbrlyusraaccess") return PNLBRLYUSRAACCESS;
	else if (s == "pnlbrlyusrdetail") return PNLBRLYUSRDETAIL;
	else if (s == "pnlbrlyusrheadbar") return PNLBRLYUSRHEADBAR;
	else if (s == "pnlbrlyusrlist") return PNLBRLYUSRLIST;
	else if (s == "pnlbrlyusrmnusergroup") return PNLBRLYUSRMNUSERGROUP;
	else if (s == "pnlbrlyusrrec") return PNLBRLYUSRREC;
	else if (s == "qrybrlycon1nrelay") return QRYBRLYCON1NRELAY;
	else if (s == "qrybrlyconconmnequipment") return QRYBRLYCONCONMNEQUIPMENT;
	else if (s == "qrybrlyconlist") return QRYBRLYCONLIST;
	else if (s == "qrybrlyconmapflight") return QRYBRLYCONMAPFLIGHT;
	else if (s == "qrybrlyconmapleg") return QRYBRLYCONMAPLEG;
	else if (s == "qrybrlyconmaplocation") return QRYBRLYCONMAPLOCATION;
	else if (s == "qrybrlyconmapnode") return QRYBRLYCONMAPNODE;
	else if (s == "qrybrlyconmaprelay") return QRYBRLYCONMAPRELAY;
	else if (s == "qrybrlyconmnflight") return QRYBRLYCONMNFLIGHT;
	else if (s == "qrybrlyconmnsegment") return QRYBRLYCONMNSEGMENT;
	else if (s == "qrybrlyconref1nsegment") return QRYBRLYCONREF1NSEGMENT;
	else if (s == "qrybrlyfillist") return QRYBRLYFILLIST;
	else if (s == "qrybrlyflt1nconnection") return QRYBRLYFLT1NCONNECTION;
	else if (s == "qrybrlyflteqp1nnode") return QRYBRLYFLTEQP1NNODE;
	else if (s == "qrybrlyflteqpmnconnection") return QRYBRLYFLTEQPMNCONNECTION;
	else if (s == "qrybrlyfltfafawaypoint") return QRYBRLYFLTFAFAWAYPOINT;
	else if (s == "qrybrlyfltlist") return QRYBRLYFLTLIST;
	else if (s == "qrybrlyfltmnconnection") return QRYBRLYFLTMNCONNECTION;
	else if (s == "qrybrlyfltmnlocation") return QRYBRLYFLTMNLOCATION;
	else if (s == "qrybrlyfltorgmnflight") return QRYBRLYFLTORGMNFLIGHT;
	else if (s == "qrybrlyfltref1nsegment") return QRYBRLYFLTREF1NSEGMENT;
	else if (s == "qrybrlyleg1nflight") return QRYBRLYLEG1NFLIGHT;
	else if (s == "qrybrlylegcor1nconnection") return QRYBRLYLEGCOR1NCONNECTION;
	else if (s == "qrybrlyleglist") return QRYBRLYLEGLIST;
	else if (s == "qrybrlylegmapleg") return QRYBRLYLEGMAPLEG;
	else if (s == "qrybrlylegmaplocation") return QRYBRLYLEGMAPLOCATION;
	else if (s == "qrybrlylegmnlocation") return QRYBRLYLEGMNLOCATION;
	else if (s == "qrybrlylegorgmnleg") return QRYBRLYLEGORGMNLEG;
	else if (s == "qrybrlylocbgn1nleg") return QRYBRLYLOCBGN1NLEG;
	else if (s == "qrybrlylocend1nleg") return QRYBRLYLOCEND1NLEG;
	else if (s == "qrybrlyloceqp1nnode") return QRYBRLYLOCEQP1NNODE;
	else if (s == "qrybrlyloceqpmnconnection") return QRYBRLYLOCEQPMNCONNECTION;
	else if (s == "qrybrlyloclist") return QRYBRLYLOCLIST;
	else if (s == "qrybrlylocmapleg") return QRYBRLYLOCMAPLEG;
	else if (s == "qrybrlylocmapproxlocation") return QRYBRLYLOCMAPPROXLOCATION;
	else if (s == "qrybrlylocmapvislocation") return QRYBRLYLOCMAPVISLOCATION;
	else if (s == "qrybrlylocmnflight") return QRYBRLYLOCMNFLIGHT;
	else if (s == "qrybrlylocmnleg") return QRYBRLYLOCMNLEG;
	else if (s == "qrybrlylocmnsegment") return QRYBRLYLOCMNSEGMENT;
	else if (s == "qrybrlylocproxorgmnlocation") return QRYBRLYLOCPROXORGMNLOCATION;
	else if (s == "qrybrlylocvisorgmnlocation") return QRYBRLYLOCVISORGMNLOCATION;
	else if (s == "qrybrlyopr1nequipment") return QRYBRLYOPR1NEQUIPMENT;
	else if (s == "qrybrlyoprlist") return QRYBRLYOPRLIST;
	else if (s == "qrybrlyprsadetail") return QRYBRLYPRSADETAIL;
	else if (s == "qrybrlyprslist") return QRYBRLYPRSLIST;
	else if (s == "qrybrlypty1nequipment") return QRYBRLYPTY1NEQUIPMENT;
	else if (s == "qrybrlyptylist") return QRYBRLYPTYLIST;
	else if (s == "qrybrlyreg1nlocation") return QRYBRLYREG1NLOCATION;
	else if (s == "qrybrlyregadstswitch") return QRYBRLYREGADSTSWITCH;
	else if (s == "qrybrlyreglist") return QRYBRLYREGLIST;
	else if (s == "qrybrlyregsup1nregion") return QRYBRLYREGSUP1NREGION;
	else if (s == "qrybrlyrly1nnode") return QRYBRLYRLY1NNODE;
	else if (s == "qrybrlyrlylist") return QRYBRLYRLYLIST;
	else if (s == "qrybrlyseglist") return QRYBRLYSEGLIST;
	else if (s == "qrybrlysegmnconnection") return QRYBRLYSEGMNCONNECTION;
	else if (s == "qrybrlysegmnlocation") return QRYBRLYSEGMNLOCATION;
	else if (s == "qrybrlysegorgmnsegment") return QRYBRLYSEGORGMNSEGMENT;
	else if (s == "qrybrlyttb1nflight") return QRYBRLYTTB1NFLIGHT;
	else if (s == "qrybrlyttblist") return QRYBRLYTTBLIST;
	else if (s == "qrybrlyttbref1nfile") return QRYBRLYTTBREF1NFILE;
	else if (s == "qrybrlyusgaaccess") return QRYBRLYUSGAACCESS;
	else if (s == "qrybrlyusglist") return QRYBRLYUSGLIST;
	else if (s == "qrybrlyusgmnuser") return QRYBRLYUSGMNUSER;
	else if (s == "qrybrlyusr1nsession") return QRYBRLYUSR1NSESSION;
	else if (s == "qrybrlyusraaccess") return QRYBRLYUSRAACCESS;
	else if (s == "qrybrlyusrlist") return QRYBRLYUSRLIST;
	else if (s == "qrybrlyusrmnusergroup") return QRYBRLYUSRMNUSERGROUP;
	else if (s == "rootbrly") return ROOTBRLY;
	else if (s == "sessbrly") return SESSBRLY;

	return(0);
};

string VecBrlyVJob::getSref(
			const uint ix
		) {
	if (ix == CRDBRLYCON) return("CrdBrlyCon");
	else if (ix == CRDBRLYFIL) return("CrdBrlyFil");
	else if (ix == CRDBRLYFLT) return("CrdBrlyFlt");
	else if (ix == CRDBRLYLEG) return("CrdBrlyLeg");
	else if (ix == CRDBRLYLOC) return("CrdBrlyLoc");
	else if (ix == CRDBRLYNAV) return("CrdBrlyNav");
	else if (ix == CRDBRLYOPR) return("CrdBrlyOpr");
	else if (ix == CRDBRLYPRS) return("CrdBrlyPrs");
	else if (ix == CRDBRLYPTY) return("CrdBrlyPty");
	else if (ix == CRDBRLYREG) return("CrdBrlyReg");
	else if (ix == CRDBRLYRLY) return("CrdBrlyRly");
	else if (ix == CRDBRLYSEG) return("CrdBrlySeg");
	else if (ix == CRDBRLYTTB) return("CrdBrlyTtb");
	else if (ix == CRDBRLYUSG) return("CrdBrlyUsg");
	else if (ix == CRDBRLYUSR) return("CrdBrlyUsr");
	else if (ix == DLGBRLYCONNEW) return("DlgBrlyConNew");
	else if (ix == DLGBRLYLEGNEW) return("DlgBrlyLegNew");
	else if (ix == DLGBRLYNAVLOAINI) return("DlgBrlyNavLoaini");
	else if (ix == DLGBRLYTTBIMPFLT) return("DlgBrlyTtbImpflt");
	else if (ix == DLGBRLYTTBNEW) return("DlgBrlyTtbNew");
	else if (ix == DLGBRLYTTBTRLORIG) return("DlgBrlyTtbTrlorig");
	else if (ix == IEXBRLYFLT) return("IexBrlyFlt");
	else if (ix == IEXBRLYINI) return("IexBrlyIni");
	else if (ix == IEXBRLYTTB) return("IexBrlyTtb");
	else if (ix == PNLBRLYCON1NRELAY) return("PnlBrlyCon1NRelay");
	else if (ix == PNLBRLYCONCONMNEQUIPMENT) return("PnlBrlyConConMNEquipment");
	else if (ix == PNLBRLYCONDETAIL) return("PnlBrlyConDetail");
	else if (ix == PNLBRLYCONHEADBAR) return("PnlBrlyConHeadbar");
	else if (ix == PNLBRLYCONLIST) return("PnlBrlyConList");
	else if (ix == PNLBRLYCONMAP) return("PnlBrlyConMap");
	else if (ix == PNLBRLYCONMNFLIGHT) return("PnlBrlyConMNFlight");
	else if (ix == PNLBRLYCONMNSEGMENT) return("PnlBrlyConMNSegment");
	else if (ix == PNLBRLYCONPRE) return("PnlBrlyConPre");
	else if (ix == PNLBRLYCONREC) return("PnlBrlyConRec");
	else if (ix == PNLBRLYCONREF1NSEGMENT) return("PnlBrlyConRef1NSegment");
	else if (ix == PNLBRLYFILDETAIL) return("PnlBrlyFilDetail");
	else if (ix == PNLBRLYFILHEADBAR) return("PnlBrlyFilHeadbar");
	else if (ix == PNLBRLYFILLIST) return("PnlBrlyFilList");
	else if (ix == PNLBRLYFILREC) return("PnlBrlyFilRec");
	else if (ix == PNLBRLYFLT1NCONNECTION) return("PnlBrlyFlt1NConnection");
	else if (ix == PNLBRLYFLTDETAIL) return("PnlBrlyFltDetail");
	else if (ix == PNLBRLYFLTEQP1NNODE) return("PnlBrlyFltEqp1NNode");
	else if (ix == PNLBRLYFLTEQPMNCONNECTION) return("PnlBrlyFltEqpMNConnection");
	else if (ix == PNLBRLYFLTFAFAWAYPOINT) return("PnlBrlyFltFafAWaypoint");
	else if (ix == PNLBRLYFLTHEADBAR) return("PnlBrlyFltHeadbar");
	else if (ix == PNLBRLYFLTLIST) return("PnlBrlyFltList");
	else if (ix == PNLBRLYFLTMNCONNECTION) return("PnlBrlyFltMNConnection");
	else if (ix == PNLBRLYFLTMNLOCATION) return("PnlBrlyFltMNLocation");
	else if (ix == PNLBRLYFLTORGMNFLIGHT) return("PnlBrlyFltOrgMNFlight");
	else if (ix == PNLBRLYFLTPRE) return("PnlBrlyFltPre");
	else if (ix == PNLBRLYFLTREC) return("PnlBrlyFltRec");
	else if (ix == PNLBRLYFLTREF1NSEGMENT) return("PnlBrlyFltRef1NSegment");
	else if (ix == PNLBRLYLEG1NFLIGHT) return("PnlBrlyLeg1NFlight");
	else if (ix == PNLBRLYLEGCOR1NCONNECTION) return("PnlBrlyLegCor1NConnection");
	else if (ix == PNLBRLYLEGDETAIL) return("PnlBrlyLegDetail");
	else if (ix == PNLBRLYLEGHEADBAR) return("PnlBrlyLegHeadbar");
	else if (ix == PNLBRLYLEGLIST) return("PnlBrlyLegList");
	else if (ix == PNLBRLYLEGMAP) return("PnlBrlyLegMap");
	else if (ix == PNLBRLYLEGMNLOCATION) return("PnlBrlyLegMNLocation");
	else if (ix == PNLBRLYLEGORGMNLEG) return("PnlBrlyLegOrgMNLeg");
	else if (ix == PNLBRLYLEGPRE) return("PnlBrlyLegPre");
	else if (ix == PNLBRLYLEGREC) return("PnlBrlyLegRec");
	else if (ix == PNLBRLYLOCBGN1NLEG) return("PnlBrlyLocBgn1NLeg");
	else if (ix == PNLBRLYLOCDETAIL) return("PnlBrlyLocDetail");
	else if (ix == PNLBRLYLOCEND1NLEG) return("PnlBrlyLocEnd1NLeg");
	else if (ix == PNLBRLYLOCEQP1NNODE) return("PnlBrlyLocEqp1NNode");
	else if (ix == PNLBRLYLOCEQPMNCONNECTION) return("PnlBrlyLocEqpMNConnection");
	else if (ix == PNLBRLYLOCHEADBAR) return("PnlBrlyLocHeadbar");
	else if (ix == PNLBRLYLOCLIST) return("PnlBrlyLocList");
	else if (ix == PNLBRLYLOCMAP) return("PnlBrlyLocMap");
	else if (ix == PNLBRLYLOCMNFLIGHT) return("PnlBrlyLocMNFlight");
	else if (ix == PNLBRLYLOCMNLEG) return("PnlBrlyLocMNLeg");
	else if (ix == PNLBRLYLOCMNSEGMENT) return("PnlBrlyLocMNSegment");
	else if (ix == PNLBRLYLOCPROXORGMNLOCATION) return("PnlBrlyLocProxOrgMNLocation");
	else if (ix == PNLBRLYLOCREC) return("PnlBrlyLocRec");
	else if (ix == PNLBRLYLOCVISORGMNLOCATION) return("PnlBrlyLocVisOrgMNLocation");
	else if (ix == PNLBRLYNAVADMIN) return("PnlBrlyNavAdmin");
	else if (ix == PNLBRLYNAVBASE) return("PnlBrlyNavBase");
	else if (ix == PNLBRLYNAVCONNECT) return("PnlBrlyNavConnect");
	else if (ix == PNLBRLYNAVHEADBAR) return("PnlBrlyNavHeadbar");
	else if (ix == PNLBRLYOPR1NEQUIPMENT) return("PnlBrlyOpr1NEquipment");
	else if (ix == PNLBRLYOPRDETAIL) return("PnlBrlyOprDetail");
	else if (ix == PNLBRLYOPRHEADBAR) return("PnlBrlyOprHeadbar");
	else if (ix == PNLBRLYOPRLIST) return("PnlBrlyOprList");
	else if (ix == PNLBRLYOPRREC) return("PnlBrlyOprRec");
	else if (ix == PNLBRLYPRSADETAIL) return("PnlBrlyPrsADetail");
	else if (ix == PNLBRLYPRSDETAIL) return("PnlBrlyPrsDetail");
	else if (ix == PNLBRLYPRSHEADBAR) return("PnlBrlyPrsHeadbar");
	else if (ix == PNLBRLYPRSLIST) return("PnlBrlyPrsList");
	else if (ix == PNLBRLYPRSREC) return("PnlBrlyPrsRec");
	else if (ix == PNLBRLYPTY1NEQUIPMENT) return("PnlBrlyPty1NEquipment");
	else if (ix == PNLBRLYPTYDETAIL) return("PnlBrlyPtyDetail");
	else if (ix == PNLBRLYPTYHEADBAR) return("PnlBrlyPtyHeadbar");
	else if (ix == PNLBRLYPTYLIST) return("PnlBrlyPtyList");
	else if (ix == PNLBRLYPTYREC) return("PnlBrlyPtyRec");
	else if (ix == PNLBRLYREG1NLOCATION) return("PnlBrlyReg1NLocation");
	else if (ix == PNLBRLYREGADSTSWITCH) return("PnlBrlyRegADstswitch");
	else if (ix == PNLBRLYREGDETAIL) return("PnlBrlyRegDetail");
	else if (ix == PNLBRLYREGHEADBAR) return("PnlBrlyRegHeadbar");
	else if (ix == PNLBRLYREGLIST) return("PnlBrlyRegList");
	else if (ix == PNLBRLYREGREC) return("PnlBrlyRegRec");
	else if (ix == PNLBRLYREGSUP1NREGION) return("PnlBrlyRegSup1NRegion");
	else if (ix == PNLBRLYRLY1NNODE) return("PnlBrlyRly1NNode");
	else if (ix == PNLBRLYRLYDETAIL) return("PnlBrlyRlyDetail");
	else if (ix == PNLBRLYRLYHEADBAR) return("PnlBrlyRlyHeadbar");
	else if (ix == PNLBRLYRLYLIST) return("PnlBrlyRlyList");
	else if (ix == PNLBRLYRLYREC) return("PnlBrlyRlyRec");
	else if (ix == PNLBRLYSEGDETAIL) return("PnlBrlySegDetail");
	else if (ix == PNLBRLYSEGHEADBAR) return("PnlBrlySegHeadbar");
	else if (ix == PNLBRLYSEGLIST) return("PnlBrlySegList");
	else if (ix == PNLBRLYSEGMNCONNECTION) return("PnlBrlySegMNConnection");
	else if (ix == PNLBRLYSEGMNLOCATION) return("PnlBrlySegMNLocation");
	else if (ix == PNLBRLYSEGORGMNSEGMENT) return("PnlBrlySegOrgMNSegment");
	else if (ix == PNLBRLYSEGPRE) return("PnlBrlySegPre");
	else if (ix == PNLBRLYSEGREC) return("PnlBrlySegRec");
	else if (ix == PNLBRLYTTB1NFLIGHT) return("PnlBrlyTtb1NFlight");
	else if (ix == PNLBRLYTTBDETAIL) return("PnlBrlyTtbDetail");
	else if (ix == PNLBRLYTTBHEADBAR) return("PnlBrlyTtbHeadbar");
	else if (ix == PNLBRLYTTBLIST) return("PnlBrlyTtbList");
	else if (ix == PNLBRLYTTBREC) return("PnlBrlyTtbRec");
	else if (ix == PNLBRLYTTBREF1NFILE) return("PnlBrlyTtbRef1NFile");
	else if (ix == PNLBRLYUSGAACCESS) return("PnlBrlyUsgAAccess");
	else if (ix == PNLBRLYUSGDETAIL) return("PnlBrlyUsgDetail");
	else if (ix == PNLBRLYUSGHEADBAR) return("PnlBrlyUsgHeadbar");
	else if (ix == PNLBRLYUSGLIST) return("PnlBrlyUsgList");
	else if (ix == PNLBRLYUSGMNUSER) return("PnlBrlyUsgMNUser");
	else if (ix == PNLBRLYUSGREC) return("PnlBrlyUsgRec");
	else if (ix == PNLBRLYUSR1NSESSION) return("PnlBrlyUsr1NSession");
	else if (ix == PNLBRLYUSRAACCESS) return("PnlBrlyUsrAAccess");
	else if (ix == PNLBRLYUSRDETAIL) return("PnlBrlyUsrDetail");
	else if (ix == PNLBRLYUSRHEADBAR) return("PnlBrlyUsrHeadbar");
	else if (ix == PNLBRLYUSRLIST) return("PnlBrlyUsrList");
	else if (ix == PNLBRLYUSRMNUSERGROUP) return("PnlBrlyUsrMNUsergroup");
	else if (ix == PNLBRLYUSRREC) return("PnlBrlyUsrRec");
	else if (ix == QRYBRLYCON1NRELAY) return("QryBrlyCon1NRelay");
	else if (ix == QRYBRLYCONCONMNEQUIPMENT) return("QryBrlyConConMNEquipment");
	else if (ix == QRYBRLYCONLIST) return("QryBrlyConList");
	else if (ix == QRYBRLYCONMAPFLIGHT) return("QryBrlyConMapFlight");
	else if (ix == QRYBRLYCONMAPLEG) return("QryBrlyConMapLeg");
	else if (ix == QRYBRLYCONMAPLOCATION) return("QryBrlyConMapLocation");
	else if (ix == QRYBRLYCONMAPNODE) return("QryBrlyConMapNode");
	else if (ix == QRYBRLYCONMAPRELAY) return("QryBrlyConMapRelay");
	else if (ix == QRYBRLYCONMNFLIGHT) return("QryBrlyConMNFlight");
	else if (ix == QRYBRLYCONMNSEGMENT) return("QryBrlyConMNSegment");
	else if (ix == QRYBRLYCONREF1NSEGMENT) return("QryBrlyConRef1NSegment");
	else if (ix == QRYBRLYFILLIST) return("QryBrlyFilList");
	else if (ix == QRYBRLYFLT1NCONNECTION) return("QryBrlyFlt1NConnection");
	else if (ix == QRYBRLYFLTEQP1NNODE) return("QryBrlyFltEqp1NNode");
	else if (ix == QRYBRLYFLTEQPMNCONNECTION) return("QryBrlyFltEqpMNConnection");
	else if (ix == QRYBRLYFLTFAFAWAYPOINT) return("QryBrlyFltFafAWaypoint");
	else if (ix == QRYBRLYFLTLIST) return("QryBrlyFltList");
	else if (ix == QRYBRLYFLTMNCONNECTION) return("QryBrlyFltMNConnection");
	else if (ix == QRYBRLYFLTMNLOCATION) return("QryBrlyFltMNLocation");
	else if (ix == QRYBRLYFLTORGMNFLIGHT) return("QryBrlyFltOrgMNFlight");
	else if (ix == QRYBRLYFLTREF1NSEGMENT) return("QryBrlyFltRef1NSegment");
	else if (ix == QRYBRLYLEG1NFLIGHT) return("QryBrlyLeg1NFlight");
	else if (ix == QRYBRLYLEGCOR1NCONNECTION) return("QryBrlyLegCor1NConnection");
	else if (ix == QRYBRLYLEGLIST) return("QryBrlyLegList");
	else if (ix == QRYBRLYLEGMAPLEG) return("QryBrlyLegMapLeg");
	else if (ix == QRYBRLYLEGMAPLOCATION) return("QryBrlyLegMapLocation");
	else if (ix == QRYBRLYLEGMNLOCATION) return("QryBrlyLegMNLocation");
	else if (ix == QRYBRLYLEGORGMNLEG) return("QryBrlyLegOrgMNLeg");
	else if (ix == QRYBRLYLOCBGN1NLEG) return("QryBrlyLocBgn1NLeg");
	else if (ix == QRYBRLYLOCEND1NLEG) return("QryBrlyLocEnd1NLeg");
	else if (ix == QRYBRLYLOCEQP1NNODE) return("QryBrlyLocEqp1NNode");
	else if (ix == QRYBRLYLOCEQPMNCONNECTION) return("QryBrlyLocEqpMNConnection");
	else if (ix == QRYBRLYLOCLIST) return("QryBrlyLocList");
	else if (ix == QRYBRLYLOCMAPLEG) return("QryBrlyLocMapLeg");
	else if (ix == QRYBRLYLOCMAPPROXLOCATION) return("QryBrlyLocMapProxLocation");
	else if (ix == QRYBRLYLOCMAPVISLOCATION) return("QryBrlyLocMapVisLocation");
	else if (ix == QRYBRLYLOCMNFLIGHT) return("QryBrlyLocMNFlight");
	else if (ix == QRYBRLYLOCMNLEG) return("QryBrlyLocMNLeg");
	else if (ix == QRYBRLYLOCMNSEGMENT) return("QryBrlyLocMNSegment");
	else if (ix == QRYBRLYLOCPROXORGMNLOCATION) return("QryBrlyLocProxOrgMNLocation");
	else if (ix == QRYBRLYLOCVISORGMNLOCATION) return("QryBrlyLocVisOrgMNLocation");
	else if (ix == QRYBRLYOPR1NEQUIPMENT) return("QryBrlyOpr1NEquipment");
	else if (ix == QRYBRLYOPRLIST) return("QryBrlyOprList");
	else if (ix == QRYBRLYPRSADETAIL) return("QryBrlyPrsADetail");
	else if (ix == QRYBRLYPRSLIST) return("QryBrlyPrsList");
	else if (ix == QRYBRLYPTY1NEQUIPMENT) return("QryBrlyPty1NEquipment");
	else if (ix == QRYBRLYPTYLIST) return("QryBrlyPtyList");
	else if (ix == QRYBRLYREG1NLOCATION) return("QryBrlyReg1NLocation");
	else if (ix == QRYBRLYREGADSTSWITCH) return("QryBrlyRegADstswitch");
	else if (ix == QRYBRLYREGLIST) return("QryBrlyRegList");
	else if (ix == QRYBRLYREGSUP1NREGION) return("QryBrlyRegSup1NRegion");
	else if (ix == QRYBRLYRLY1NNODE) return("QryBrlyRly1NNode");
	else if (ix == QRYBRLYRLYLIST) return("QryBrlyRlyList");
	else if (ix == QRYBRLYSEGLIST) return("QryBrlySegList");
	else if (ix == QRYBRLYSEGMNCONNECTION) return("QryBrlySegMNConnection");
	else if (ix == QRYBRLYSEGMNLOCATION) return("QryBrlySegMNLocation");
	else if (ix == QRYBRLYSEGORGMNSEGMENT) return("QryBrlySegOrgMNSegment");
	else if (ix == QRYBRLYTTB1NFLIGHT) return("QryBrlyTtb1NFlight");
	else if (ix == QRYBRLYTTBLIST) return("QryBrlyTtbList");
	else if (ix == QRYBRLYTTBREF1NFILE) return("QryBrlyTtbRef1NFile");
	else if (ix == QRYBRLYUSGAACCESS) return("QryBrlyUsgAAccess");
	else if (ix == QRYBRLYUSGLIST) return("QryBrlyUsgList");
	else if (ix == QRYBRLYUSGMNUSER) return("QryBrlyUsgMNUser");
	else if (ix == QRYBRLYUSR1NSESSION) return("QryBrlyUsr1NSession");
	else if (ix == QRYBRLYUSRAACCESS) return("QryBrlyUsrAAccess");
	else if (ix == QRYBRLYUSRLIST) return("QryBrlyUsrList");
	else if (ix == QRYBRLYUSRMNUSERGROUP) return("QryBrlyUsrMNUsergroup");
	else if (ix == ROOTBRLY) return("RootBrly");
	else if (ix == SESSBRLY) return("SessBrly");

	return("");
};

